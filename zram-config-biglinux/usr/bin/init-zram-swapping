#!/bin/sh

# load dependency modules
NRDEVICES=$(grep -c ^processor /proc/cpuinfo | sed 's/^0$/1/')
if modinfo zram | grep -q ' zram_num_devices:' 2>/dev/null; then
  MODPROBE_ARGS="zram_num_devices=${NRDEVICES}"
elif modinfo zram | grep -q ' num_devices:' 2>/dev/null; then
  MODPROBE_ARGS="num_devices=${NRDEVICES}"
else
  exit 1
fi
modprobe zram $MODPROBE_ARGS


#if [ "$mem" > "3000000" ]; then
    mem=$(((1500000 / ${NRDEVICES}) * 1024))
#else
#    mem=$((($totalmem / ${NRDEVICES}) * 1024))
#fi


# initialize the devices
for i in $(seq ${NRDEVICES}); do
  DEVNUMBER=$((i - 1))
#  echo zstd > /sys/block/zram${DEVNUMBER}/comp_algorithm
  echo $mem > /sys/block/zram${DEVNUMBER}/disksize
#  echo 0 >/sys/block/zram${DEVNUMBER}/queue/read_ahead_kb
#  echo 2 >/sys/block/zram${DEVNUMBER}/queue/nomerges
#  echo 2 >/sys/block/zram${DEVNUMBER}/queue/rq_affinity
  mkswap /dev/zram${DEVNUMBER}
  swapon -p 100 /dev/zram${DEVNUMBER}
done

#modprobe bfq
#echo bfq > /sys/class/block/sda/queue/scheduler
#echo mq-bfq > /sys/class/block/sda/queue/scheduler


#echo 1 >/proc/sys/vm/compact_memory
#echo 1 >/proc/sys/kernel/sched_child_runs_first
#echo 1000000 >/proc/sys/kernel/sched_min_granularity_ns
#echo 10000000 >/proc/sys/kernel/sched_wakeup_granularity_ns

#echo 1 >/sys/kernel/mm/ksm/run
#echo 1 > /proc/sys/vm/overcommit_memory
echo 10 >/proc/sys/vm/swappiness
echo 50 > /proc/sys/vm/vfs_cache_pressure
echo 12000 > /proc/sys/vm/min_free_kbytes 
#echo 0 >/proc/sys/vm/page-cluster
#echo 0 >/proc/sys/vm/extfrag_threshold
#echo 1 >/proc/sys/vm/watermark_scale_factor
